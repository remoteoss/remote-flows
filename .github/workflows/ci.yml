name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run CI tests
        run: npm run ci

  setup-e2e:
    name: Setup E2E Environment
    runs-on: ubuntu-latest
    # Only run E2E setup on PRs against main or pushes to main
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install example/ dependencies
        working-directory: ./example
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: ./example
        run: npx playwright install --with-deps

      - name: Cache Playwright setup
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('example/package-lock.json') }}

  deploy-preview:
    name: Deploy Preview Environments
    runs-on: ubuntu-latest
    # Only run deployments on PRs against main or pushes to main
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy remote-flows to vercel
        id: vercel-remote-flows
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_REMOTE_FLOWS_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Deploy remote-flows-example-app to vercel
        id: vercel-example-app
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_EXAMPLE_APP_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true

      - name: Save deployment URLs
        run: |
          echo "${{ steps.vercel-remote-flows.outputs.preview-url }}" > remote-flows-url.txt
          echo "${{ steps.vercel-example-app.outputs.preview-url }}" > example-app-url.txt

      - name: Upload deployment URLs
        uses: actions/upload-artifact@v4
        with:
          name: deployment-urls
          path: |
            remote-flows-url.txt
            example-app-url.txt

  run-e2e:
    name: Run E2E Tests
    needs: [setup-e2e, deploy-preview]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install example/ dependencies
        working-directory: ./example
        run: npm ci

      - name: Restore Playwright cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('example/package-lock.json') }}

      - name: Download deployment URLs
        uses: actions/download-artifact@v4
        with:
          name: deployment-urls

      - name: Run Playwright tests
        env:
          BASE_URL: $(cat remote-flows-url.txt)
          VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}
        working-directory: ./example
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy-production:
    name: Deploy to Production
    needs: [unit-tests, run-e2e]
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Promote remote-flows to production
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_REMOTE_FLOWS_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: '--prod'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true

      - name: Promote example app to production
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_EXAMPLE_APP_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: '--prod'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true
